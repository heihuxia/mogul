import { action, configure, runInAction } from 'mobx';
import { listUsers } from './services/api';
import BaseStore from '../../utils/BaseStore';

const queryTemplateOptions = () => ({
  templateOptionA: [
    {
      label: 'label',
      value: 'value'
    }
  ]
});

configure({ enforceActions: true });

class Store extends BaseStore {
  @action
  listTable = async params => {
    this.showLoading();
    const response = await listUsers(params);
    this.initList({
      list: response.results.map(item => {
        // 每一个row item , 必须有一个 unique 的 key
        const {
          name: { first, last }
        } = item;
        return {
          ...item,
          key: `${first} ${last}`
        };
      }),
      pagination: {
        current: response.info.page,
        pageSize: response.info.results,
        total: 10000
      }
    });
    runInAction(() => {
      this.hideLoading();
    });
  };
  @action
  listOptions = async params => {
    const response = await queryTemplateOptions(params);
    this.initOptions(response);
  };
}

const template = new Store({
  // 给予 options 默认值
  options: {
    templateOptionA: [],
    templateOptionB: []
  }
});

export default template;
